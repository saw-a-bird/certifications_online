{% extends "@backend_root/base.html.twig" %}

{% block title %}Providers - List{% endblock %}

{% block scriptsheet %}
	<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js" integrity="sha256-T0Vest3yCU7pafRw9r+settMBX6JkKN06dqBnpQ8d30=" crossorigin="anonymous"></script>
    <script src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.12.1/js/dataTables.bootstrap4.min.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.12.1/css/dataTables.bootstrap4.min.css" />
    <script>
        document.getElementById("ressources_index").classList.add("link-active");
    </script>

    <style> 
        .main_div {
            display:flex;
            flex-direction: row;

            margin: 0 15px; 
            padding: 10px;
            justify-content:space-between;
            width:100%
        }

        .search-header {
            margin:0 0 30px;
            font-family: "Montserrat", sans-serif;
        }

        #providers_table {
            margin-left:30px;
            width:100%
        }

        .search_forms form {
            margin-bottom:30px;
            width:200px;
        }

        .search-form {
            display:inline-block;
        }
        
        .autocomplete {
            /*the container must be positioned relative:*/
            position: relative;
            display: inline-block;
        }

        .autocomplete-items {
            position: absolute;
            border: 1px solid #d4d4d4;
            border-bottom: none;
            border-top: none;
            z-index: 99;
            top: 100%;
            left: 0;
            right: 0;
        }

        .search-form:not(:focus) ~ .autocomplete-items:not(:hover) {
            pointer-events:none;
            opacity:0;
        }

        .search-form:focus ~ .autocomplete-items, .autocomplete-items:hover {
            pointer-events:auto;
            opacity:1;
        }

        .autocomplete-items div {
            padding: 10px;
            cursor: pointer;
            background-color: #fff;
            border-bottom: 1px solid #d4d4d4;
        }

        .autocomplete-items div:hover {
            /*when hovering an item:*/
            background-color: #e9e9e9;
        }

    </style>
{% endblock %}

{% block form %}
<div style = "text-align: right; padding: 20px 10px 0 0;">
    <a href="{{ path("providers_new")}}"><button class="btn add_button">Add</button></a>
</div>


<div class = "main_div">
    <div class="search_forms">
        <h3 class = "search-header">Search Filter: </h3>
        <form onsubmit="return false;">
            <div class="autocomplete">
                Exam: <input type="search" id = "exams-input" class="search-form form-control" placeholder="Exam code here..." autofocus >
                <div id = "exams-list" class="autocomplete-items"></div>
            </div>
        </form>

        <form onsubmit="return false;">
            <div class="autocomplete">
                Certification: <input type="search" id = "certifications-input"  class="search-form form-control" placeholder="Certification title here..." autofocus >
                <div id = "certifications-list" class="autocomplete-items"></div>
            </div>
         </form>
    </div>

    <div id = "providers_table">
		<table id="example" class="table dataTable" style="width: 100%;" aria-describedby="example_info">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Name</th>
                    <th>Exams</th>
                    <th>Certifications</th>
                    <th>actions</th>
                </tr>
            </thead>
            <tbody>
            {% for provider in providers %}
                <tr>
                    {% set countExams = provider.getExams().count() %}
                    <td>{{ provider.id }}</td>
                    <td>{{ provider.name }}</td>
                    <td>{{ countExams }}</td>
                    <td>{{ provider.getCertifications().count() }}</td>
                    <td>
                        <a href="{{ path('provider_exams_list', {'id': provider.id}) }}">exams</a>
                        <a href="{{ path('provider_certifs_list', {'id': provider.id}) }}">certifications</a>
                        <a href="{{ path('providers_edit', {'id': provider.id}) }}">edit</a>
                        <form method="post" action="{{ path('providers_delete', {'id': provider.id}) }}" onsubmit="return confirm('Are you sure you want to delete this certification? {{ countExams }} exam(s) WILL be deleted from the database.');" class = "btn-delete">
                            <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ provider.id) }}">
                            <button class="btn-link">delete</button>
                        </form>
                    </td>
                </tr>
            {% else %}
                <tr>
                    <td colspan="3">no records found</td>
                </tr>
            {% endfor %}
            </tbody>
        </table>
    </div>
</div>


<script>
    $(document).ready(function () {
        $('#example').DataTable({"aoColumns": [ {"bSearchable": false}, {"bSearchable": true}, {"bSearchable": false}, {"bSearchable": false}, {"bSearchable": false}]});

        $(".dataTables_filter input").attr("placeholder", "Name...").blur();

        function addResults(listElement, array) {
            listElement.empty();
            array.forEach(function(item) {
                listElement.prepend(
                    "<a href = '"+item.href+"'><div>"+item.value+"</div></a>"
                )
            });
        }

        cache = {'exams': {}, 'certifications': {}};
        primaryKeys = {'exams': 'code', 'certifications': 'title'};

        Object.keys(cache).forEach(key => {
            $("#"+key+"-input").autocomplete({
                source: function (request, response) {
                    var term = request.term;
                    var listElement = $("#"+key+"-list");
                    
                    if (request.term != "") {
                        if (term in cache[key]) {
                            addResults(listElement, cache[key][term]);
                            return;
                        }

                        $.ajax({
                            crossDomain: true,
                            type: 'POST',
                            url: "/"+key+"/search",

                            dataType: 'json',
                            data: { "search": request.term },
                            processdata: true,
                            success: function (result) {
                                var results = JSON.parse(JSON.stringify(result));
                            
                                cache[key][term] = $.map(results, function (item) { 
                                    return {
                                        href: key+"/"+item.id+"/edit",
                                        value: item[primaryKeys[key]]
                                    }
                                });

                                addResults(listElement, cache[key][term]);
                            },
                            error: function (a, b, c) {
                                debugger;
                            }
                        });
                    } else {
                        listElement.empty();
                    }
                },
                selectFirst: true,
                minLength: 0
            });
        });
    });
</script>

{% endblock %}