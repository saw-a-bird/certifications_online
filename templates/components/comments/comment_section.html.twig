
<style>
    .new-comment-info {
        font-size: 13px;
        display:block
    }

    .comment-form-error {
        border: 1.5px solid #ff5454;
    }

    .comment-form-disabled {
        background: #ebebeb;
        border: 1px solid #c6c6c6;
    }

</style>

<div class = 'uk-comments-container'>
    {% if logged_in %}
        <div> 
            <div class='list-inline comment-new-header'>
                <h1>New Comment</h1>
            {% set checkSurplus = render(url('comment_surplus_check', {'exam_id': exam.id, 'user_id': app.user.id})) %}
            {% if checkSurplus == false %}
                <button type='submit' class='comment_btn comment_submit_btn btn-normal pull-right' id= 'comment_submit'>Submit</button>
            {% endif %}
            </div>

            <form class = 'uk-container'>
                <div class='row list-inline'>
                    <div class = 'comment-new-picture'>
                        <img class='uk-border-rounded img-responsive' src='{{ asset( app.user.getAvatarPath()) }}' alt=''>
                    </div>
                    <div class='comment-form-group col-xs-12 col-sm-9 col-lg-10'>
                        {% if checkSurplus == false %}
                            <textarea class='comment-form-control' id='new_comment' placeholder='Add a public comment' required></textarea>
                            <i class = "new-comment-info"> The comment must not contain URL links. </i>
                            <i class = "new-comment-info"> You cannot comment more than 2 times inside an exam. </i>
                        {% else %}
                            <textarea class='comment-form-control comment-form-disabled' id='new_comment' placeholder='Already commented twice.' disabled required></textarea>
                        {% endif %}

                    </div>
                </div>
            </form>
        </div>
    {% endif %}

    <h2 id = "comments_header"> 
        <span id = "comments_count"></span> Comments 
    </h2>
            
    <div class='uk-container' id = 'comments_container'>
        {% for comment in exam.getComments() %}
            <div id = "comm_{{ comment.getId() }}">
            {% include '@components/comments/one_comment.html.twig' with {'comment': comment} %}

            {# {% if comment.getReplies().count >= 1 %}
                <a class='u-link-view-replies u-link-v5 g-color-gray-dark-v4 g-color-primary--hover'>
                <i class='fa fa-caret-down' aria-hidden='true'></i>
                    View {{ comment.getReplies().count }} replies
            {% else %}
                <a class='u-link-v5 g-color-gray-dark-v4 g-color-primary--hover'>
            {% endif %} #}
            
                {# </a> #}
                {# <div class = 'media-reply'></div>
                <div class = 'media-reply-self'></div>  #}
            </div>  
        <!-- End of Comment -->
        {% endfor %}
    </div>

<script>

  $(document).ready(function() {
    var comment_count = parseInt('{{ exam.getComments().count }}');

    var comments_header = document.getElementById("comments_header");
    var comments_counter = document.getElementById("comments_count");
    
    if (comment_count == 0) {
        comments_header.classList.add("uk-display-none");
    } else {
        comments_counter.innerHTML = comment_count;
    }

    var exam_id = '{{ exam.id }}';
    // Submit Buttons
    
    var comments_container = $("#comments_container");
    $('#comment_submit').click(function() {
        var texta = $("textarea#new_comment");

        if (texta.val() != "") {
            $.post("{{ path('comment_new', {'id': exam.id}) }}", {content: texta.val()}).done(function(data) {
                texta.val('');
                var x = $(data).prependTo(comments_container);
                load_one(x, "new comment");
                if (comment_count++ == 0) {
                    comments_header.classList.remove("uk-display-none");
                }
                texta.removeClass("comment-form-error");

            }).fail(function(data) {
                alert(data.responseText);
                texta.addClass("comment-form-error");
            });
        }
    });

    function edit_button(self, ul_con, col_con, comment_con, comment_id) {
        var old_content = ul_con.prev().text();

        if (comment_con.find(".edit-form").length) {
            comment_con.children(":first").show(0, function() {
                col_con.hide();
                var form_container = $("#edit_comment"+comment_id);
                form_container.removeClass("comment-form-error");
            });
        } else {
            $.post("{{ path('comment_edit_form') }}", {content : old_content, comment_id : comment_id}).done(function(data) {
                col_con.hide();
                comment_con.prepend(data);

                var edit_container = comment_con.children(":first"); 
                load_edit_container(edit_container, col_con, comment_id);
            }); 
        }
    }

    function load_edit_container(edit_container, col_con, comment_id) {

        var form_container = edit_container.find("#edit_comment"+comment_id);

        edit_container.find('#cancel').click(function() {
            col_con.show(0, function() {
                edit_container.hide();
            });
        });

        edit_container.find('#edit').click(function() {
            $.post("{{ path('comment_edit_path') }}", {comment_id: comment_id, content : form_container.val()}).done(function(data) { 

                col_con.replaceWith(data);

                edit_container.next().show(0, function() {
                    edit_container.hide();
                });
            }).fail(function(data) {
                alert(data.responseText);
                form_container.addClass("comment-form-error");
            });
        });
    }

    function delete_button(comment_con, comm_id) {
        if (confirm("Are you sure you want to delete this comment?")) {
            $.post("{{ path('comment_delete_path') }}", {comment_id : comm_id}).done(function(data) {
                // fetch DOM element and delete it.
                comment_con.remove();
                if (--comment_count == 0) {
                    comments_header.classList.add("uk-display-none");
                }
            });
        }
    } // DONE
    
    function reply_submit(self, comm_container) {
        // var reply_container = self.parent();
        // var isType, replyTo, selfContainer;

        // var replies_container = comm_container.parent();
        // if (replies_container.hasClass("media-reply-self") ||
        //         replies_container.hasClass("media-reply")) {
        //     isType = "reply";
        //     replyTo = comm_container.parent().parent().attr('id');
        // } else {
        //     isType = "comment";
        //     replyTo = comm_container.attr('id');
        //     selfContainer = comm_container.find(".media-reply-self");
        // }

        // $.post("/comment/reply/add/"+replyTo.split("_")[1], {content: self.prev().find("textarea#new_comment").val()}).done(function(data) {
        //     reply_container.hide(0, function() {
        //         if (isType == "reply") {
        //             comm_container.after(data);
        //             load_one(comm_container.next(), "reply to reply");
        //         } else if (isType == "comment") {
        //             selfContainer.prepend(data);
        //             load_one(selfContainer.children().first(), "reply to comment");
        //         }
        //     });
        // });
    }

    function reply_button(self, replyForm, comment_con) {
        // if (replyForm.is(':empty'))  path("reply_form")
            // $.post("").done(function(data) {
            //     replyForm.append(data);
            //     replyForm.find('.uk-reply-submit').click(function() {
            //         reply_submit($(this), comment_con);
            //     });
            //     replyForm.show();
            // });
        // } else {
        //     replyForm.toggle();
        // }
    }


    // Comment capabilities (reply, delete, edit)

    function load_one(comment_con, status) { // self is the comment DIV
        if (comment_con.attr("id") && comment_con.attr("id").indexOf('comm_') == 0) {
            var col_con = comment_con.children(':first');
            var ul_con = col_con.find('#capabilities');
            var comment_id = comment_con.attr("id").split("_")[1];
            
            // ul_con.find('.uk-reply-button').click(function() {
            //     reply_button($(this), ul_con.parent().parent().next(), comment_con);
            // });

            ul_con.find('.uk-delete-button').click(function() {
                delete_button(comment_con, comment_id);
            });

            ul_con.find('.uk-edit-button').click(function() {
                edit_button($(this), ul_con, col_con, comment_con, comment_id);
            });
        } else {
            // console.log("error ("+status+"): cannot load comment container.");
        }
    }

    function load_all(space, replies = null) {
        space.find('[id^=comm_]').each(function() {
            var container = $(this);
            load_one(container, "load all");

            if (replies) {
                container.find('.u-link-view-replies').click(function() {
                    var mediaReplies = $(this).next();
                    if (mediaReplies.html() == '') {
                        $.post("/comment/reply/get/"+container.attr('id').split("_")[1]).done(function(data) {
                            mediaReplies.empty().append(data);
                            load_all(mediaReplies);
                        });
                    } else {
                        mediaReplies.toggle();
                    }
                });
            }
        });
    }

    load_all($(this), true);
  });
</script>

</div>