# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    imgs_directory: '%kernel.project_dir%/public/imgs'
    docs_directory: '%kernel.project_dir%/public/docs'
    
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests}'
        
    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']


    # Commands:

    App\Command\ScraperCommand:
        arguments:
            $proxyListDirectory: '%kernel.project_dir%\public\proxyscrapper'

    # Services:

    App\Services\ImageUploader:
        arguments:
            $imgsDirectory: '%imgs_directory%'

    App\Services\PDFManager:
        arguments:
            $docsDirectory: '%docs_directory%'

    App\Services\PDFtoHTMLService:
        arguments:
            $docsDirectory: '%docs_directory%'
            $kernelDirectory: '%kernel.project_dir%'

    # Other:

    faker.generator:
        class: Faker\Generator
        arguments: ['Psr\Container\ContainerInterface']

    App\DataFixtures\AppFixtures:
        arguments: ['@security.password_hasher', '@faker.generator']
